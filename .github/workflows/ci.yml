name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: |
          ~/.platformio
        key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-platformio-
          
    - name: Build project
      run: |
        pio run
        
    - name: Check code formatting
      run: |
        pio check --flags="--skip-packages"
        
    - name: Run tests
      run: |
        pio test --environment=esp32cam
        
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cpplint
        
    - name: Lint C++ code
      run: |
        find src -name "*.cpp" -o -name "*.h" | xargs cpplint --filter=-legal/copyright,-build/include_subdir,-build/namespaces
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      uses: github/codeql-action/init@v2
      with:
        languages: cpp
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check documentation
      run: |
        # Vérifier que README.md existe
        test -f README.md
        # Vérifier que LICENSE existe
        test -f LICENSE
        # Vérifier que CONTRIBUTING.md existe
        test -f CONTRIBUTING.md
        # Vérifier que CHANGELOG.md existe
        test -f CHANGELOG.md
        
    - name: Check markdown links
      run: |
        # Installer markdown-link-check
        npm install -g markdown-link-check
        # Vérifier les liens dans README.md
        markdown-link-check README.md
        
  release:
    needs: [build, lint, security, documentation]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## Changes in this Release
          
          - Automated release from CI/CD pipeline
          - Build: ${{ github.sha }}
          - Date: ${{ github.event.head_commit.timestamp }}
          
          ## Installation
          
          ```bash
          git clone https://github.com/iyotee/ESP32CAM-HTTP-MJPEG.git
          cd ESP32CAM-HTTP-MJPEG
          pio run -t upload
          ```
          
        draft: false
        prerelease: false 